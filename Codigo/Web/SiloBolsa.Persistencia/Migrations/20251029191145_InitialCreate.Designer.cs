// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SiloBolsa.Persistencia.Repositorios;

#nullable disable

namespace SiloBolsa.Persistencia.Migrations
{
    [DbContext(typeof(SiloBolsaContexto))]
    [Migration("20251029191145_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Alerta", b =>
                {
                    b.Property<Guid>("IdAlerta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_alerta");

                    b.Property<bool>("CorreoEnviado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("correoenviado");

                    b.Property<DateTime>("FechaHoraAlerta")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_ḧora_alerta");

                    b.Property<Guid>("IdSilo")
                        .HasColumnType("uuid")
                        .HasColumnName("id_silo");

                    b.Property<string>("Mensaje")
                        .HasColumnType("text")
                        .HasColumnName("mensaje");

                    b.HasKey("IdAlerta");

                    b.HasIndex("FechaHoraAlerta");

                    b.HasIndex("IdSilo");

                    b.ToTable("alerta");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Caja", b =>
                {
                    b.Property<Guid>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_caja");

                    b.Property<Guid>("IdSilo")
                        .HasColumnType("uuid")
                        .HasColumnName("id_silo");

                    b.Property<int>("UbicacionEnSilo")
                        .HasColumnType("integer")
                        .HasColumnName("ubicacion_en_silo");

                    b.HasKey("IdCaja");

                    b.HasIndex("IdSilo");

                    b.ToTable("caja");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Grano", b =>
                {
                    b.Property<int>("IdGrano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdGrano"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<double>("HumedadMax")
                        .HasColumnType("double precision")
                        .HasColumnName("humedad_max");

                    b.Property<double>("HumedadMin")
                        .HasColumnType("double precision")
                        .HasColumnName("humedad_min");

                    b.Property<double>("NivelDioxidoMax")
                        .HasColumnType("double precision")
                        .HasColumnName("nivel_dioxido_max");

                    b.Property<double>("NivelDioxidoMin")
                        .HasColumnType("double precision")
                        .HasColumnName("nivel_dioxido_min");

                    b.Property<double>("TempMax")
                        .HasColumnType("double precision")
                        .HasColumnName("temp_max");

                    b.Property<double>("TempMin")
                        .HasColumnType("double precision")
                        .HasColumnName("temp_min");

                    b.HasKey("IdGrano");

                    b.ToTable("grano");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Lectura", b =>
                {
                    b.Property<Guid>("IdLectura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_lectura");

                    b.Property<double>("DioxidoDeCarbono")
                        .HasColumnType("double precision")
                        .HasColumnName("dioxido_de_carbono");

                    b.Property<DateTime>("FechaHoraLectura")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("fecha_hora_lectura");

                    b.Property<double>("Humedad")
                        .HasColumnType("double precision")
                        .HasColumnName("humedad");

                    b.Property<Guid>("IdCaja")
                        .HasColumnType("uuid")
                        .HasColumnName("id_caja");

                    b.Property<double>("Temp")
                        .HasColumnType("double precision")
                        .HasColumnName("temp");

                    b.HasKey("IdLectura");

                    b.HasIndex("FechaHoraLectura");

                    b.HasIndex("IdCaja");

                    b.ToTable("lectura");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Silo", b =>
                {
                    b.Property<Guid>("IdSilo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id_silo");

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer")
                        .HasColumnName("capacidad");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<double>("Latitud")
                        .HasColumnType("double precision")
                        .HasColumnName("latitud");

                    b.Property<double>("Longitud")
                        .HasColumnType("double precision")
                        .HasColumnName("longitud");

                    b.Property<int>("TipoGrano")
                        .HasColumnType("integer")
                        .HasColumnName("tipo_grano");

                    b.HasKey("IdSilo");

                    b.HasIndex("TipoGrano");

                    b.ToTable("silo");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Alerta", b =>
                {
                    b.HasOne("SiloBolsa.Core.Modelos.Silo", "Silo")
                        .WithMany("Alertas")
                        .HasForeignKey("IdSilo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Silo");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Caja", b =>
                {
                    b.HasOne("SiloBolsa.Core.Modelos.Silo", "Silo")
                        .WithMany("Cajas")
                        .HasForeignKey("IdSilo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Silo");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Lectura", b =>
                {
                    b.HasOne("SiloBolsa.Core.Modelos.Caja", "Caja")
                        .WithMany("Lecturas")
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caja");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Silo", b =>
                {
                    b.HasOne("SiloBolsa.Core.Modelos.Grano", "GranoSilo")
                        .WithMany()
                        .HasForeignKey("TipoGrano")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GranoSilo");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Caja", b =>
                {
                    b.Navigation("Lecturas");
                });

            modelBuilder.Entity("SiloBolsa.Core.Modelos.Silo", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Cajas");
                });
#pragma warning restore 612, 618
        }
    }
}
